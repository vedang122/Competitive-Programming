input n, m and a[n] -

1st observation - When n>=m lets see prefixsum%m. Since (pf[i]%m)<m, there are m-1 distinct values(0 is a valid state) possible but we have n distinct state so according to pigeonhole principle its always YES.

n<m

we can use dp states similar subset sum problem dp[i][j] , where dp[i][j] = 1 when it's possible to find a subset in [a0,a1,,,ai] st their sum%m=j, otherwise 0;

transiiton state and code-

    if(n>=m)
    {
        cout<<"YES"<<endl;
        return;
    }
    bool dp[n][m];
    mem(dp,0);
    dp[0][a[0]%m]=1;
    fr(i,0,n-1)
    {
        fr(j,0,m)
        {
            dp[i+1][(j+a[i+1])%m]|=dp[i][j];
            dp[i+1][j]|=dp[i][j];
            //cout<<dp[i][j]<<" ";
        }
        dp[i+1][a[i+1]%m]=1;
        //cout<<endl;
    }
    fr(i,0,n)
    {
        if(dp[i][0])
        {
            cout<<"YES"<<endl;
            return;
        }
    }
    cout<<"NO"<<endl;
