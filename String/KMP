lli lps[1000001];
vl ans;
void precompute(string p)
{
    lli i=0,j=1,cnt=0;
    lps[0]=0;
    while(j<p.length())
    {
        if(p[i]==p[j])
        {
            i++;
            lps[j]=i;
            j++;
        }
        else
        {
            if(i!=0)
            {
                i=lps[i-1];
            }
            else
            {
                lps[j]=0;
                j++;
            }
        }
    }
}
void KMP(string s,string p)
{
    precompute(p);
    lli n=s.length();
    lli m=p.length();
    ans.clear();
    lli i=0,j=0;
    while(i<n)
    {
        if(s[i]==p[j])
        {
            i++;
            j++;
        }
        if(j==m)
        {
            ans.pb(i-j);
            j=lps[j-1];
        }
        else if(i<n&&s[i]!=p[j])
        {
            if(j!=0)
                j=lps[j-1];
            else
                i++;
        }
    }
}
void solve()
{
    string s,p;
    cin>>s>>p;
    KMP(s, p);
    show(ans);
}
