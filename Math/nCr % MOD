//Time Complexity - O(nlog(MOD))

const int N=1e6+1;
lli fac[N];
void factorial()
{
    fac[0] = 1;
    for (lli i = 1; i < N; i++)
        fac[i] = (fac[i - 1]%MOD * (i%MOD)) % MOD;
}

lli nCr(lli n,lli r)
{
    // Base case
    lli res = fac[n];
    lli div = fac[n-r] * fac[r];
    div %= MOD;
    div = modpow(div, MOD - 2);
    return (res * div) % MOD;
}

int main()
{
    run;
    lli a,b;
    cin>>a>>b;
    factorial();
    cout<<nCr(a, b)<<endl;
    return 0;
}
